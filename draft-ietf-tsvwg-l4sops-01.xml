<?xml version='1.0' encoding='utf-8'?>
<!-- This template is for creating an Internet Draft using xml2rfc,
which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
(Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
(using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" category="info" docName="draft-ietf-tsvwg-l4sops-00" ipr="trust200902" obsoletes="" updates="" submissionType="IETF" xml:lang="en" tocInclude="true" tocDepth="4" symRefs="true" sortRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 2.39.0 -->
  <!-- category values: std, bcp, info, exp, and historic
    ipr values: trust200902, noModificationTrust200902, noDerivativesTrust200902,
       or pre5378Trust200902
    you can add the attributes updates="NNNN" and obsoletes="NNNN" 
    they will automatically be output with "(if approved)" -->

    <!-- ***** FRONT MATTER ***** -->

    <front>
    <!-- The abbreviated title is used in the page header - it is only necessary if the 
   full title is longer than 39 characters -->

   <title abbrev="L4S Operational Guidance">Operational Guidance for Deployment of L4S in the Internet</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-tsvwg-l4sops-01"/>
    <!-- add 'role="editor"' below for the editors if appropriate -->

   <!-- Another author who claims to be an editor -->

   <author fullname="Greg White" initials="G." surname="White" role="editor">
      <organization>CableLabs</organization>
      <address>
        <email>g.white@cablelabs.com</email>
      </address>
    </author>
    <date year="2021"/>
    <!-- If the month and year are both specified and are the current ones, xml2rfc will fill 
        in the current day for you. If only the current year is specified, xml2rfc will fill 
	 in the current day and month for you. If the year is not the current one, it is 
	 necessary to specify at least a month (xml2rfc assumes day="1" if not specified for the 
	 purpose of calculating the expiry date). With drafts it is normally sufficient to 
	 specify just the year. -->

  <!-- Meta-data Declarations -->

  <area>Transport</area>
    <workgroup>Transport Area Working Group</workgroup>
    <keyword/>
    <!-- Keywords will be incorporated into HTML output
        files in a meta tag but they have no effect on text or nroff
        output. If you submit your draft to the RFC Editor, the
        keywords will be used for the search engine. -->

    <abstract>
      <t>This document is intended to provide guidance in order to ensure successful deployment of Low Latency Low Loss Scalable throughput (L4S) in the Internet. Other L4S documents provide guidance for running an L4S experiment, but this document is focused solely on potential interactions between L4S flows and flows using the original ('Classic') ECN over a Classic ECN bottleneck link. The document discusses the potential outcomes of these interactions, describes mechanisms to detect the presence of Classic ECN bottlenecks, and identifies opportunities to prevent and/or detect and resolve fairness problems in such networks. This guidance is aimed at operators of end-systems, operators of networks, and researchers.</t>
    </abstract>
  </front>
  <middle>
    <section><name>Introduction</name>
      <t><xref target="I-D.ietf-tsvwg-l4s-arch">Low-latency, low-loss, scalable throughput (L4S)</xref> traffic is designed to provide lower queuing delay than conventional traffic via a new network service based on a modified Explicit Congestion Notification (ECN) response from the network.  L4S traffic is identified by the ECT(1) codepoint, and network bottlenecks that support L4S should congestion-mark ECT(1) packets to enable L4S congestion feedback.  However, L4S traffic is also expected to coexist well with classic congestion controlled traffic even if the bottleneck queue does not support L4S.  This includes paths where the bottleneck link utilizes packet drops in response to congestion (either due to buffer overrun or active queue management), as well as paths that implement a 'flow-queuing' scheduler such as fq_codel <xref target="RFC8290"/>.  A potential area of poor interoperability lies in network bottlenecks employing a shared queue that implements an Active Queue Management (AQM) algorithm that provides Explicit Congestion Notification signaling according to <xref target="RFC3168"/>.  RFC3168 has been updated (via <xref target="RFC8311"/>) to reserve ECT(1) for experimental use only (also see <xref target="IANA-ECN"/>), and its use for L4S has been specified in <xref target="I-D.ietf-tsvwg-ecn-l4s-id"/>. However, any deployed RFC3168 AQMs might not be updated, and RFC8311 still prefers that routers not involved in L4S experimentation treat ECT(1) and ECT(0) as equivalent.  It has been demonstrated <xref target="Briscoe"/> that when a set of long-running flows comprising both classic congestion controlled flows and L4S-compliant congestion controlled flows compete for bandwidth in such a legacy shared RFC3168 queue, the classic congestion controlled flows may achieve lower throughput than they would have if all of the flows had been classic congestion controlled flows.  This 'unfairness' between the two classes is more pronounced on longer RTT paths (e.g. 50ms and above) and/or at higher link rates (e.g. 50 Mbps and above). The lower the capacity per flow, the less pronounced the problem becomes. Thus the imbalance is most significant when the slowest flow rate is still high in absolute terms.</t>
      <t>The root cause of the unfairness is that the L4S architecture redefines the congestion signal (CE mark) and congestion response in the case of packets marked ECT(1) (used by L4S senders), whereas a RFC3168 queue does not differentiate between packets marked ECT(0) (used by classic senders) and those marked ECT(1), and provides identical CE marks to both types. The result is that the two classes respond differently to the CE congestion signal.  The classic senders expect that CE marks are sent very rarely (e.g. approximately 1 CE mark every 200 round trips on a 50 Mbps x 50ms path) while the L4S senders expect very frequent CE marking (e.g. approximately 2 CE marks per round trip).  The result is that the classic senders respond to the CE marks provided by the bottleneck by yielding capacity to the L4S flows.  The resulting rate imbalance can be demonstrated, and could be a cause of concern in some cases.</t>
      <t>This concern primarily relates to single-queue (FIFO) bottleneck links that implement RFC3168 ECN, but the situation can also potentially occur with per-flow queuing, e.g. fq_codel <xref target="RFC8290"/>, when flow isolation is imperfect due to hash collisions or VPN tunnels.</t>
      <t>While the above mentioned unfairness has been demonstrated in laboratory testing, it has not been observed in operational networks, in part because members of the Transport Working group are not aware of any deployments of single-queue Classic ECN bottlenecks in the Internet.</t> 
      <t>This issue was considered in November 2015 (and reaffirmed in April 2020) when the WG decided on the identifier to use for L4S, as recorded in Appendix B.1 of <xref target="I-D.ietf-tsvwg-ecn-l4s-id"/>. It was recognized that compromises would have to be made because IP header space is extremely limited. A number of alternative codepoint schemes were compared for their ability to traverse most Internet paths, to work over tunnels, to work at lower layers, to work with TCP, etc.  It was decided to progress on the basis that robust performance in presence of these single-queue RFC3168 bottlenecks is not the most critical issue, since it was believed that they are rare. Nonetheless, there is the possibility that such deployments exist, and there is the possibility that more could be deployed/enabled in the future, hence there is an interest in providing guidance to ensure that measures can be taken to address the potential issues, should they arise in practice.</t>
      <t>TODO: further discussion on severity and who might be impacted?</t>
    </section>

    <section><name>Per-Flow Fairness</name>
      <t>There are a number of factors that influence the relative rates achieved by a set of users or a set of applications sharing a queue in a bottleneck link. Notably the response that each application has to congestion signals (whether loss or explicit signaling) can play a large role in determining whether the applications share the bandwidth in an equitable manner. In the Internet, ISPs typically control capacity sharing between their customers using a scheduler at the access bottleneck rather than relying on the congestion responses of end-systems. So in that context this question primarily concerns capacity sharing between the applications used by one customer site.  Nonetheless, there are many networks on the Internet where capacity sharing relies, at least to some extent, on congestion control in the end-systems. The traditional norm for congestion response has been that it is handled on a per-connection basis, and that (all else being equal) it results in each connection in the bottleneck achieving a data rate inversely proportional to the average RTT of the connection. The end result (in the case of steady-state behavior of a set of like connections) is that each user or application achieves a data rate proportional to N/RTT, where N is the number of simultaneous connections that the user or application creates, and RTT is the harmonic mean of the average round-trip-times for those connections. Thus, users or applications that create a larger number of connections and/or that have a lower RTT achieve a larger share of the bottleneck link rate than others.</t>
      <t>While this may not be considered fair by many, it nonetheless has been the typical starting point for discussions around fairness. In fact it has been common when evaluating new congestion responses to actually set aside N &amp; RTT as variables in the equation, and just compare per-flow rates between flows with the same RTT. For example <xref target="RFC5348"/> defines the congestion response for a flow to be '"reasonably fair" if its sending rate is generally within a factor of two of the sending rate of a [Reno] TCP flow under the same conditions.' Given that RTTs can vary by roughly two orders of magnitude and flow counts can vary by at least an order of magnitude between applications, it seems that the accepted definition of reasonable fairness leaves quite a bit of room for different levels of performance between users or applications, and so perhaps isn't the gold standard, but is rather a metric that is used because of its convenience. </t>
      <t>In practice, the effect of this RTT dependence has historically been muted by the fact that many networks were deployed with very large ("bloated") drop-tail buffers that would introduce queuing delays well in excess of the base RTT of the flows utilizing the link, thus equalizing (to some degree) the effective RTTs of those flows. Recently, as network equipment suppliers and operators have worked to improve the latency performance of the network by the use of smaller buffers and/or AQM algorithms, this has had the side-effect of uncovering the inherent RTT bias in classic congestion control algorithms.</t>
      <t>The L4S architecture aims to significantly improve this situation, by requiring senders to adopt a congestion response that eliminates RTT bias as much as possible (see <xref target="I-D.ietf-tsvwg-ecn-l4s-id"/>). As a result, L4S promotes a level of per-flow fairness beyond what is ordinarily considered for classic senders, the RFC3168 issue notwithstanding.</t>
      <t>It is also worth noting that the congestion control algorithms deployed currently on the internet tend toward (RTT-weighted) fairness only over long timescales. For example, the cubic algorithm can take minutes to converge to fairness when a new flow joins an existing flow on a link <xref target="Ha"/>. Since the vast majority of TCP connections don't last for minutes, it is unclear to what degree per-flow, same-RTT fairness, even when demonstrated in the lab, translates to the real world.</t>
      <t>So, in real networks, where per-application, per-end-host or per-customer fairness may be more important than long-term, same-RTT, per-flow fairness, it may not be that instructive to focus on the latter as being a necessary end goal.</t>
      <t>Nonetheless, situations in which the presence of an L4S flow has the potential to cause harm <xref target="Ware"/> to classic flows need to be understood. Most importantly, if there are situations in which the introduction of L4S traffic would degrade both the absolute and relative performance of classic traffic significantly, i.e. to the point that it would be considered starvation while L4S was not starved, these situations need to be understood and either remedied or avoided.</t>
      
      <t>Aligned with this context, the guidance provided in this document is aimed not at monitoring the relative performance of L4S senders compared against classic senders on a per-flow basis, but rather at identifying instances where RFC3168 bottlenecks are deployed so that operators of L4S senders can have the opportunity to assess whether any actions need to be taken. Additionally this document provides guidance for network operators around configuring any RFC3168 bottlenecks to minimize the potential for negative interactions between L4S and classic senders. </t>
    </section>

    <section><name>Detection of Classic ECN Bottlenecks</name>
      <t>The IETF encourages researchers, end system deployers and network operators to conduct experiments to identify to what degree RFC3168 bottlecks exist in networks. These types of measurement campaigns, even if each is conducted over a limited set of paths, could be useful to further understand the scope of any potential issues, to guide end system deployers on where to examine performance more closely (or possibly delay L4S deployment), and to help network operators identify nodes where remediation may be necessary to provide the best performance.</t>
      
      <section anchor="studies"><name>Recent Studies</name>
      <t>A small number of recent studies have attempted to gauge the level of RFC3168 AQM deployment in the internet.</t>

      <t>In 2020, Akamai conducted a <eref target="https://mailarchive.ietf.org/arch/msg/tsvwg/2tbRHphJ8K_CE6is9n7iQy-VAZM/">study</eref> of "downstream" (server to client) CE marking broken out by ASN on two separate days, one in late March, the other in mid July <xref target="Holland"/>.  They concluded that prevalence of CE-marking was low across the ~800 ASNs observed (0.19% - 0.30% of ECT client IPs ever saw a CE mark), but it was growing, and that they could not determine whether the CE marking was due to a single queue or FQ. They also observed that RFC3168 AQMs are not uniformly distributed. There were three small ISPs where prevalence of CE-marking was above ~70%, indicating a likely deployment by the ISP.  There were another four small ASNs where the prevalence was between 10% and 20%, which may also indicate deployment by the ISP. There were also roughly six larger ASNs (and perhaps 20 small ASNs) where the prevalence was between 3% and 8%.</t>

      <t>In 2017, Apple reported on their observations of ECN marking by networks, broken out by country <xref target="Bhooma"/>.  They reported four countries that exceeded the global baseline seen by Akamai, but one of these (Argentine Republic) was later discovered to be due to a bug, leaving three countries: China 1% of paths, Mexico 3.2% of paths, France 6% of paths. The percentage in France appears consistent with <eref target="https://mailarchive.ietf.org/arch/msg/tsvwg/UyvpwUiNw0obd_EylBBV7kDRIHs/">reports</eref> that fq_codel has been implemented in DSL home routers deployed by Free.fr.</t>  

      <t>In December 2020 - January 2021, Pete Heist worked with a small cooperative WISP in the Czech Republic to collect data on CE-marking <xref target="I-D.heist-tsvwg-ecn-deployment-observations"/>. Overall, 18.6% of paths saw possible RFC3168 AQM activity, which appears to place this ISP in the small group with moderately high RFC3168 prevalence reported by Akamai. This ISP was known to have deployed RFC3168 fq_codel equipment in some of their subnets, and in other subnets there were 33 IPs where possible AQM activity was observed via CE-marks and/or ECE flags, corresponding to approximately 10% of paths. It was <eref target="https://mailarchive.ietf.org/arch/msg/tsvwg/Rj7GylByZuFa3_LTCMvEfb-CYpw/">agreed</eref> that these were likely to be due to fq_codel implementations in home routers deployed by members of the cooperative. </t>

      <t>The interpretation of these studies seems to be that there are no known deployments of FIFO RFC3168, all of the known RFC3168 deployments are fq_codel, the majority of the currently unknown deployments are likely to be fq_codel, and there may be a small number of networks where CE-marking is prevalent (and thus likely ISP-managed) where it is currently unknown as to whether the source is a FIFO or an FQ system.</t>    

      <t> Other studies (e.g. <xref target="Trammel"/>, <xref target="Bauer"/>, <xref target="Mandalari"/>) have examined ECN traversal, but have not reported data on prevalence of CE-marking by networks. Another <xref target="Roddav"/> examined traces from a Tier 1 ISP link in 2018 and observed that 94% of the non-zero ECN marked packets were CE, which appears to reflect a misconfiguration of equipment using that link, as opposed to providing evidence of RFC3168 AQM deployment.</t>
      </section>

      <section><name>Future Experiments</name>

      <t>The design of future experiments should consider not only the detection of RFC3168 ECN marking, but also the determination whether the bottleneck AQM is a single queue (FIFO) or a flow-queuing (FQ) system. It is believed that the vast majority, if not all, of the RFC3168 AQMs in use at bottleneck links are flow-queuing systems (e.g. fq_codel <xref target="RFC8290"/> or COBALT <xref target="Palmei"/>).  When flow isolation is successful, the FQ scheduling of such queues isolates classic congestion control traffic from L4S traffic, and thus eliminates the potential for unfairness. But, these systems are known to sometimes result in imperfect isolation, either due to hash collisions (see <xref target="RFC8290" section="5.3"/>) or because of VPN tunneling (see <xref target="RFC8290" section="6.2"/>). It is believed that the majority of FQ deployments in bottleneck links today (e.g. Cake <xref target="Hoiland-Jorgensen"/>) employ hashing algorithms that virtually eliminate the possibility of collisions, making this a non-issue for those deployments.  But, VPN tunnels remain an issue for FQ deployments, and the introduction of L4S traffic raises the possibility that tunnels containing mixed classic and L4S traffic would exist, in which case FQ implementations that have not been updated to be L4S-aware could exhibit similar unfairness properties as single queue AQMs.  Until such queues are upgraded to support L4S (see <xref target="FQ"/>) or treat ECT(1) as not-ECT traffic, end-host mitigations such as separating L4S and Classic traffic into distinct VPN tunnels could be employed.</t>
      
      <t><xref target="Briscoe"/> contains recommendations on some of the mechanisms that can be used to detect RFC3168 bottlenecks. In particular, Section 4 of <xref target="Briscoe"/> outlines an approach for out-band-detection of RFC3168 bottlenecks.</t>
    </section>
    </section>

    <section><name>Operator of an L4S host</name>
      <t>From a host's perspective, support for L4S only involves the sender via ECT(1) marking &amp; L4S-compatible congestion control. The receiver is involved in ECN feedback but can generally be agnostic to whether ECN is being used for L4S <xref target="I-D.ietf-tsvwg-l4s-arch"/>. Between these two entities, it is primarily incumbent upon the sender to evaluate the potential for presence of RFC3168 FIFO bottlenecks and make decisions whether or not to use L4S congestion control. While is is possible for a receiver to disable L4S functionality by not negotiating ECN, a general purpose receiver is not expected to perform any testing or monitoring for RFC3168, and is also not expected to invoke any active response in the case that such a bottleneck exists.</t>
      
      <t>Prior to deployment of any new technology, it is commonplace for the parties involved in the deployment to validate the performance of the new technology, via lab testing, limited field testing, large scale field testing, etc. The same is expected for deployers of L4S technology. As part of that validation, it is recommended that deployers consider the issue of RFC3168 FIFO bottlenecks and conduct experiments as described in the previous section, or otherwise assess the impact that the L4S technology will have in the networks in which it is to be deployed, and take action as is described further in this section. </t>
            <t>TODO: discussion of risk of incorrectly classifying a path</t>
      <section><name>Server Type</name>
      <t>If pre-deployment testing raises concerns about issues with RFC3168 bottlenecks, the actions taken may depend on the server type.</t>
        <section><name>General purpose servers (e.g. web servers)</name>

          <ul>
            <li>Out-of-band active testing could be performed by the server. For example, a javascript application could run simultaneous downloads (i.e. with and without L4S) during page reading time in order to survey for presence of RFC3168 FIFO bottlenecks on paths to users (e.g. as described in Section 4 of <xref target="Briscoe"/>). </li>
            <li>In-band testing could be built in to the transport protocol implementation at the sender in order to perform detection (see Section 5 of <xref target="Briscoe"/>, though note that this mechanism does not differentiate between FIFO and FQ).</li>
            <li>Discontinuing use of L4S based on the detection of RFC3168 FIFO bottlenecks is likely not needed for short transactional transfers (e.g. sub 10 seconds) since these are unlikely to achieve the steady-state conditions where unfairness has been observed.</li>
            <li>For longer file transfers, it may be possible to fall-back to Classic behavior in real-time (i.e. when doing in-band testing), or to cache those destinations where RFC3168 has been detected, and disable L4S for subsequent long file transfers to those destinations.</li>
          </ul>
        </section>
        <section><name>Specialized servers handling long-running sessions (e.g. cloud gaming)</name>
          <ul>
            <li>Out-of-band active testing could be performed at each session startup </li>
            <li>Out-of-band active testing could be integrated into a "pre-validation" of the service, done when the user signs up, and periodically thereafter</li>
            <li>In-band detection as described in <xref target="Briscoe"/> could be performed during the session</li>
          </ul>
        </section>
      </section>

      
      <section><name>Server deployment environment</name>
      <t>In addition, the responsibilities of and actions taken by a sender may depend on the environment in which it is deployed. The following sub-sections discuss two scenarios: senders serving a limited, known target audience and those that serve an unknown target audience.</t>

      <section><name>Edge Servers</name>
        <t>Some hosts (such as CDN leaf nodes and servers internal to an ISP) are deployed in environments in which they serve content to a constrained set of networks or clients. The operator of such hosts may be able to determine whether there is the possibility of <xref target="RFC3168"/> FIFO bottlenecks being present, and utilize this information to make decisions on selectively deploying L4S and/or disabling it (e.g. bleaching ECN). Furthermore, such an operator may be able to determine the likelihood of an L4S bottleneck being present, and use this information as well.</t>
        <t>For example, if a particular network is known to have deployed legacy <xref target="RFC3168"/> FIFO bottlenecks, usage of L4S for long capacity-seeking file transfers on that network could be delayed until those bottlenecks can be upgraded to mitigate any potential issues as discussed in the next section.</t>
        <t>Prior to deploying L4S on edge servers a server operator should:
        </t>
        <ul>
          <li>Consult with network operators on presence of legacy <xref target="RFC3168"/> FIFO bottlenecks</li>
          <li>Consult with network operators on presence of L4S bottlenecks</li>
          <li>Perform pre-deployment testing per network </li>
        </ul>
        <t>If a particular network offers connectivity to other networks (e.g. in the case of an ISP offering service to their customer's networks), the lack of RFC3168 FIFO bottleneck deployment in the ISP network can't be taken as evidence that RFC3168 FIFO bottlenecks don't exist end-to-end (because one may have been deployed by the end-user network). In these cases, deployment of L4S will need to take appropriate steps to detect the presence of such bottlenecks. At present, it is believed that the vast majority of RFC3168 bottlenecks in end-user networks are implementations that utilize fq_codel or Cake, where the unfairness problem is less likely to be a concern. While this doesn't completely eliminate the possibility that a legacy <xref target="RFC3168"/> FIFO bottleneck could exist, it nonetheless provides useful information that can be utilized in the decision making around the potential risk for any unfairness to be experienced by end users.</t>
      </section>

      <section><name>Other hosts</name>
        <t>Hosts that are deployed in locations that serve a wide variety of networks face a more difficult prospect in terms of handling the potential presence of RFC3168 FIFO bottlenecks. Nonetheless, the steps listed in the ealier section (based on server type) can be taken to minimize the risk of unfairness.</t>
        <t>The interpretation of studies on ECN usage and their deployment context (see <xref target="studies"/>) has so far concluded that RFC3168 FIFO bottlenecks are likely to be rare, and so detections using these techniques may also prove to be rare. Therefore, it may be possible for a host to cache a list of end host ip addresses where a RFC3168 bottleneck has been detected.  Entries in such a cache would need to age-out after a period of time to account for IP address changes, path changes, equipment upgrades, etc. [TODO: more info on ways to cache/maintain such a list]</t>
        <t>It has been suggested that a public block-list of domains that implement RFC3168 FIFO bottlenecks could be maintained. There are a number of significant issues that would seem to make this idea infeasible, not the least of which is the fact that presence of RFC3168 FIFO bottlenecks or L4S bottlenecks is not a property of a domain, it is the property of a link, and therefore of the particular current path between two endpoints.</t>
        <t>It has also been suggested that a public allow-list of domains that are participating in the L4S experiment could be maintained. This approach would not be useful, given the presence of an L4S domain on the path does not imply the absence of RFC3168 AQMs upstream or downstream of that domain. Also, the approach cannot cater for domains with a mix of L4S and RFC3168 AQMs.</t>
      </section>
    </section>
    </section>

    <section><name>Operator of a Network Employing RFC3168 FIFO Bottlenecks</name>
      <t>While it is more preferable for L4S senders to detect problems themselves, a network operator who has deployed equipment in a likely bottleneck link location (i.e. a link that is expected to be fully saturated) that is configured with a legacy <xref target="RFC3168"/> FIFO AQM can take certain steps in order to improve rate fairness between classic traffic and L4S traffic, and thus enable L4S to be deployed in a greater number of paths.</t>
      <t>Some of the options listed in this section may not be feasible in all networking equipment.</t>

      <section><name>Preferred Options</name>
      <section><name>Upgrade AQMs to Dual-Q Coupled AQM</name>
      <t>TODO: describe this option.</t>
      </section>

      <section anchor="non-coupled-shallow"><name>Configure Non-Coupled Dual Queue with Shallow Target</name>
        <t>Equipment supporting <xref target="RFC3168"/> may be configurable to enable two parallel queues for the same traffic class, with classification done based on the ECN field.</t>
        
        <ul>
          <li>
            <t>Configure 2 queues, both with ECN; 50:50 WRR scheduler </t>
            <ul>
              <li>Queue #1: ECT(1) &amp; CE packets - Shallow immediate AQM target </li>
              <li>Queue #2: ECT(0) &amp; NotECT packets - Classic AQM target </li>
            </ul>
          </li>
          <li>
            <t>Outcome in the case of n L4S flows and m long-running Classic flows</t>
            <ul>
              <li>if m &amp; n are non-zero, flows get 1/2n and 1/2m of the capacity, otherwise 1/n or 1/m</li>
              <li>never &lt; 1/2 each flow's rate if all had been Classic</li>
            </ul>
          </li>
        </ul>
        <t>This option would allow L4S flows to achieve low latency, low loss and scalable throughput, but would sacrifice the more precise flow balance offered by <xref target="I-D.ietf-tsvwg-aqm-dualq-coupled"/>. This option would be expected to result in some reordering of previously CE marked packets sent by Classic ECN senders, which is a trait shared with <xref target="I-D.ietf-tsvwg-aqm-dualq-coupled"/>. As is discussed in <xref target="I-D.ietf-tsvwg-ecn-l4s-id"/>, this reordering would be either zero risk or very low risk.</t>
      </section>

      <section><name>AFD</name>
        <t>TODO: Bob offered to provide text for this section.</t>
      </section>

      <section><name>Do Nothing</name>
        <t>If it is infeasible to implement any of the above options, it may be preferable for an operator of RFC3168 FIFO bottlenecks to leave them unchanged. In many deployment situations the risk of fairness issues may be very low, and the impact if they occur may not be particularly troublesome. This could, for instance, be true in bottlenecks where there is a high degree of flow aggregation or in high-speed bottlenecks (e.g. greater than 100 Mbps).</t> 
      </section>

    </section>
    <section><name>Less Preferred Options</name>
      <t>In the case that there is a concern about per-flow fairness between L4S flows and Classic flows in an RFC3168 FIFO bottleneck, and none of the remedies in the previous section can be implemented, the options listed in this section could be considered.</t>

      <section anchor="non-coupled-notECT"><name>Configure Non-Coupled Dual Queue Treating ECT(1) as NotECT</name>
        
        <ul>
          <li>
            <t>Configure 2 queues, both with AQM; 50:50 WRR scheduler </t>
            <ul>
              <li>Queue #1: ECT(1) &amp; NotECT packets - ECN disabled </li>
              <li>Queue #2: ECT(0) &amp; CE packets - ECN enabled </li>
            </ul>
          </li>
          <li>
            <t>Outcome </t>
            <ul>
              <li>ECT(1) treated as NotECT</li>
              <li>Flow balance for the 2 queues is the same as in <xref target="non-coupled-shallow"/></li>
            </ul>
          </li>
        </ul>
        <t>This option would not allow L4S flows to achieve low latency, low loss and scalable throughput in this bottleneck link. As a result it is the less preferred option.</t>
      </section>

      <section><name>WRED with ECT(1) Differentation</name>
        <t>This configuration is similar to the option described in <xref target="non-coupled-notECT"/>, but uses a single queue with WRED functionality.</t>
        <ul>
          <li><t>Configure the queue with two WRED classes</t>
            <ul>
              <li>Class #1: ECT(1) &amp; NotECT packets - ECN disabled </li>
              <li>Class #2: ECT(0) &amp; CE packets - ECN enabled </li>
            </ul>
          </li>
        </ul>
      </section>

      <section><name>Configure AQM to treat ECT(1) as NotECT</name>
        <t>If equipment is configurable in such a way as to only supply CE marks to ECT(0) packets, and treat ECT(1) packets identically to NotECT, or is upgradable to support this capability, doing so will eliminate the risk of unfairness.</t>
      </section>

      <section><name>ECT(1) Tunnel Bypass</name>
        <t>Tunnel ECT(1) traffic through the RFC3168 bottleneck with the outer header indicating Not-ECT, by using either an ECN tunnel ingress in Compatibility Mode <xref target="RFC6040"/> or a Limited Functionality ECN tunnel <xref target="RFC3168"/>.</t>
        <t>Two variants exist for this approach</t>
        <ol type="1">
          <li>per-domain: tunnel ECT(1) pkts to domain edge towards dst</li>
          <li>per-dst: tunnel ECT(1) pkts to dst</li>
        </ol>
      </section>
    </section>
      <section><name>Last Resort Options</name>
      <t>In case that serious issues are detected where the presence of L4S flows is determined to be the likely cause, the options in this section can be considered as a last resort to rectify the situation.</t>

      <section><name>Disable RFC3168 Support</name>
        <t>Disabling an <xref target="RFC3168"/> AQM from CE marking both ECT(0) traffic and ECT(1) traffic eliminates the unfairness issue. A downside to this approach is that classic senders will no longer get the benefits of Explict Congestion Notification at this bottleneck link. This alternative is only mentioned in case there is no other way to reconfigure an RFC3168 AQM.</t>
      </section>

      <section><name>Re-mark ECT(1) to NotECT Prior to AQM</name>
        <t>Remarking ECT(1) packets as NotECT (i.e. bleaching ECT(1)) ensures that they are treated identically to classic NotECT senders. However, this action is not recommended because a) it would also prevent downstream L4S bottlenecks from providing high fidelity congestion signals; b) it could lead to problems with future experiments that use ECT(1) in alternative ways to L4S; and c) it would violate requirements in <xref target="I-D.ietf-tsvwg-ecn-l4s-id"/>. This alternative is mentioned as an absolute last resort in case there is no other way to reconfigure an RFC3168 AQM.</t>
        <t>Note that the CE codepoint must never be bleached, otherwise it would black-hole congestion indications. </t>
      </section>
    </section>
    </section>

    <section anchor="FQ"><name>Operator of a Network Employing RFC3168 FQ Bottlenecks</name>
      <t>A network operator who has deployed flow-queuing systems that implement RFC3168 (e.g. fq_codel or CAKE) at network bottlenecks will likely see fewer potential issues when L4S traffic is present on their network as compared to operators of RFC3168 FIFOs. As discussed in previous sections, the flow queuing mechanism will typically isolate L4S flows and Classic flows into separate queues, and the scheduler will then enforce per-flow fairness. As a result, the potential fairness issues between Classic and L4S traffic that can occur in FIFOs will typically not occur in FQ systems.  That said, FQ systems commonly treat a tunneled traffic aggregate as a single flow, and thus a tunneled traffic aggregate that contains a mix of Classic and L4S traffic will utilize a single queue, and could experience the same fairness issue as has been described for RFC3168 FIFOs. This unfairness is compounded by the fact that the FQ scheduler will already be causing unfairness to flows within the tunnel relative to flows that are not tunneled.  Additionally, many of the deployed RFC3168 FQ systems currently implement an AQM algorithm (either CoDel or COBALT) that is designed for Classic traffic and reacts sluggishly to L4S (or unresponsive) traffic, with the result being that L4S senders could in some cases see worse latency performance than Classic senders.</t>
      <t>While the potential unfairness result is arguably less impactful in the case of RFC3168 FQ bottlenecks, it is believed that RFC3168 FQ bottlenecks are currently more common than RFC3168 FIFO bottlenecks. The most common deployments of RFC3168 FQ bottlenecks are in home routers running OpenWRT firmware where the user has turned the feature on.</t>
      <t>As is the case with RFC3168 FIFOs, the preferred remedy for a network operator that wishes to enable the best performance possible with regard to L4S, is for the network operator to update RFC3168 FQ bottlenecks to be L4S-aware. In cases where that is infeasible, several of the remedies described in the previous section can be used to reduce or eliminate these issues.</t>
      <ul>
        <li>Configure AQM to treat ECT(1) as NotECT </li>
        <li>ECT(1) Tunnel Bypass</li>
        <li>Disable RFC3168 Support</li>
        <li>Re-mark ECT(1) to NotECT Prior to AQM</li>
      </ul>
    </section>


<section><name>Conclusion of the L4S experiment</name>

<t>This section gives guidance on how L4S-deploying networks and endpoints should respond to either of the two possible outcomes of the IETF-supported L4S experiment.</t>

<section><name>Successful termination of the L4S experiment</name>

<t>If the L4S experiment is deemed successful, the IETF would be expected to move the L4S specifications to standards track.  Networks would then be encouraged to continue/begin deploying L4S-aware nodes and to replace all non-L4S-aware RFC3168 AQMs already deployed as far as feasible, or at least restrict RFC3168 AQM to interpret ECT(1) equal to NotECT. Networks that participated in the experiment would be expected to track the evolution of the L4S standards and adapt their implementations accordingly (e.g. if as part of switching from experimental to standards track, changes in the L4S RFCs become necessary).</t>
</section>

<section><name>Unsuccessful termination of the L4S experiment</name>

<t>If the L4S experiment is deemed unsuccessful due to lack of deployment of compliant end-systems or AQMs, it might need to be terminated: any L4S network nodes should then be un-deployed and the ECT(1) codepoint usage should be released/recycled as quickly as possible, recognizing that this process may take some time. To facilitate this potential outcome, <xref target="I-D.ietf-tsvwg-ecn-l4s-id"/> requires L4S hosts to be configurable to revert to non-L4S congestion control, and networks to be configurable to treat ECT(1) the same as ECT(0).</t>
</section>

</section>



    <section anchor="Contributors"><name>Contributors</name>
      <t>Thanks to Bob Briscoe, Jake Holland, Koen De Schepper, Olivier Tilmans, Tom Henderson, Asad Ahmed, Gorry Fairhurst, Sebastian Moeller, and members of the TSVWG mailing list for their contributions to this document. </t>
    </section>

    <section anchor="IANA"><name>IANA Considerations</name>
      <t>None.</t>
    </section>

    <section anchor="Security"><name>Security Considerations</name>
      <t>For further study.</t>
    </section>
  </middle>
  <!--  *****BACK MATTER ***** -->

  <back>
    <references><name>Informative References</name>
      <!-- Here we use entities that we defined at the beginning. -->
     <reference anchor="RFC8290" target="https://www.rfc-editor.org/info/rfc8290" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8290.xml">
        <front>
          <title>The Flow Queue CoDel Packet Scheduler and Active Queue Management Algorithm</title>
          <seriesInfo name="DOI" value="10.17487/RFC8290"/>
          <seriesInfo name="RFC" value="8290"/>
          <author initials="T." surname="Hoeiland-Joergensen" fullname="T. Hoeiland-Joergensen"/>
          <author initials="P." surname="McKenney" fullname="P. McKenney"/>
          <author initials="D." surname="Taht" fullname="D. Taht"/>
          <author initials="J." surname="Gettys" fullname="J. Gettys"/>
          <author initials="E." surname="Dumazet" fullname="E. Dumazet"/>
          <date year="2018" month="January"/>
        </front>
      </reference>
      <reference anchor="RFC3168" target="https://www.rfc-editor.org/info/rfc3168" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3168.xml">
        <front>
          <title>The Addition of Explicit Congestion Notification (ECN) to IP</title>
          <seriesInfo name="DOI" value="10.17487/RFC3168"/>
          <seriesInfo name="RFC" value="3168"/>
          <author initials="K." surname="Ramakrishnan" fullname="K. Ramakrishnan"/>
          <author initials="S." surname="Floyd" fullname="S. Floyd"/>
          <author initials="D." surname="Black" fullname="D. Black"/>
          <date year="2001" month="September"/>
        </front>
      </reference>
      <reference anchor="RFC6040" target="https://www.rfc-editor.org/info/rfc6040" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6040.xml">
        <front>
          <title>Tunnelling of Explicit Congestion Notification</title>
          <seriesInfo name="DOI" value="10.17487/RFC6040"/>
          <seriesInfo name="RFC" value="6040"/>
          <author initials="B." surname="Briscoe" fullname="B. Briscoe"/>
          <date year="2010" month="November"/>
        </front>
      </reference>
      <reference anchor="RFC8311" target="https://www.rfc-editor.org/info/rfc8311" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8311.xml">
        <front>
          <title>Relaxing Restrictions on Explicit Congestion Notification (ECN) Experimentation</title>
          <seriesInfo name="DOI" value="10.17487/RFC8311"/>
          <seriesInfo name="RFC" value="8311"/>
          <author initials="D." surname="Black" fullname="D. Black"/>
          <date year="2018" month="January"/>
        </front>
      </reference>
      <reference anchor="RFC5348" target="https://www.rfc-editor.org/info/rfc5348" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5348.xml">
        <front>
          <title>TCP Friendly Rate Control (TFRC): Protocol Specification</title>
          <seriesInfo name="DOI" value="10.17487/RFC5348"/>
          <seriesInfo name="RFC" value="5348"/>
          <author initials="S." surname="Floyd" fullname="S. Floyd"/>
          <author initials="M." surname="Handley" fullname="M. Handley"/>
          <author initials="J." surname="Padhye" fullname="J. Padhye"/>
          <author initials="J." surname="Widmer" fullname="J. Widmer"/>
          <date year="2008" month="September"/>
        </front>
      </reference>
      <reference anchor="I-D.ietf-tsvwg-l4s-arch" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-tsvwg-l4s-arch.xml" target="http://www.ietf.org/internet-drafts/draft-ietf-tsvwg-l4s-arch-08.txt">
        <front>
          <title>Low Latency, Low Loss, Scalable Throughput (L4S) Internet Service: Architecture</title>
          <seriesInfo name="Internet-Draft" value="draft-ietf-tsvwg-l4s-arch-08"/>
          <author initials="B" surname="Briscoe" fullname="Bob Briscoe"/>
          <author initials="K" surname="Schepper" fullname="Koen De Schepper"/>
          <author initials="M" surname="Bagnulo" fullname="Marcelo Bagnulo"/>
          <author initials="G" surname="White" fullname="Greg White"/>
          <date month="November" day="15" year="2020"/>
        </front>
      </reference>
      <reference anchor="I-D.ietf-tsvwg-aqm-dualq-coupled" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-tsvwg-aqm-dualq-coupled.xml" target="http://www.ietf.org/internet-drafts/draft-ietf-tsvwg-aqm-dualq-coupled-13.txt">
        <front>
          <title>DualQ Coupled AQMs for Low Latency, Low Loss and Scalable Throughput (L4S)</title>
          <seriesInfo name="Internet-Draft" value="draft-ietf-tsvwg-aqm-dualq-coupled-13"/>
          <author initials="K" surname="Schepper" fullname="Koen De Schepper"/>
          <author initials="B" surname="Briscoe" fullname="Bob Briscoe"/>
          <author initials="G" surname="White" fullname="Greg White"/>
          <date month="November" day="15" year="2020"/>
        </front>
      </reference>
      <reference anchor="I-D.ietf-tsvwg-ecn-l4s-id" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-tsvwg-ecn-l4s-id.xml" target="http://www.ietf.org/internet-drafts/draft-ietf-tsvwg-ecn-l4s-id-12.txt">
        <front>
          <title>Identifying Modified Explicit Congestion Notification (ECN) Semantics for Ultra-Low Queuing Delay (L4S)</title>
          <seriesInfo name="Internet-Draft" value="draft-ietf-tsvwg-ecn-l4s-id-12"/>
          <author initials="K" surname="Schepper" fullname="Koen De Schepper"/>
          <author initials="B" surname="Briscoe" fullname="Bob Briscoe"/>
          <date month="November" day="15" year="2020"/>
        </front>
      </reference>
      <reference anchor="Ha" target="https://www.cs.princeton.edu/courses/archive/fall16/cos561/papers/Cubic08.pdf">
        <front>
          <title>CUBIC: A New TCP-Friendly High-Speed TCP Variant</title>
          <seriesInfo name="ACM SIGOPS Operating Systems Review" value=""/>
          <author initials="S." surname="Ha"/>
          <author initials="I." surname="Rhee"/>
          <author initials="L." surname="Xu"/>
          <date year="2008"/>
        </front>
      </reference>
      <reference anchor="Ware" target="https://www.cs.cmu.edu/~rware/assets/pdf/ware-hotnets19.pdf">
        <front>
          <title>Beyond Jain's Fairness Index: Setting the Bar For The Deployment of Congestion Control Algorithms</title>
          <seriesInfo name="Hotnets'19" value=""/>
          <author initials="R." surname="Ware"/>
          <author initials="M." surname="Mukerjee"/>
          <author initials="S." surname="Seshan"/>
          <author initials="J." surname="Sherry"/>
          <date year="2019"/>
        </front>
      </reference>
      <reference anchor="Briscoe" target="https://arxiv.org/abs/1911.00710">
        <front>
          <title>TCP Prague Fall-back on Detection of a Classic ECN AQM</title>
          <seriesInfo name="ArXiv" value=""/>
          <author initials="B." surname="Briscoe"/>
          <author initials="A.S." surname="Ahmed"/>
          <date month="Feb" year="2021"/>
        </front>
      </reference>
      <reference anchor="Hoiland-Jorgensen" target="https://arxiv.org/abs/1804.07617">
        <front>
          <title>Piece of CAKE: A Comprehensive Queue Management Solution for Home Gateways</title>
          <author initials="T." surname="Hoiland-Jorgensen"/>
          <author initials="D." surname="Taht"/>
          <author initials="J." surname="Morton"/>
          <date year="2018"/>
        </front>
      </reference>
      <reference anchor="IANA-ECN" target="https://www.iana.org/assignments/dscp-registry/dscp-registry.xhtml#ecn-field">
        <front>
          <title>IANA ECN Field Assignments</title>
          <author>
            <organization>Internet Assigned Numbers Authority</organization>
          </author>
          <date year="2018"/>
        </front>
      </reference>
      <reference anchor="Palmei" target="https://ieeexplore.ieee.org/abstract/document/8847054">
        <front>
          <title>Design and Evaluation of COBALT Queue Discipline</title>
          <seriesInfo name="IEEE International Symposium on Local and Metropolitan Area Networks" value="2019"/>
          <author initials="J." surname="Palmei"/>
          <author initials="" surname="et al."/>
          <date year="2019"/>
        </front>
      </reference>
      <reference anchor="I-D.heist-tsvwg-ecn-deployment-observations" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml3/reference.I-D.heist-tsvwg-ecn-deployment-observations.xml" target="http://www.ietf.org/internet-drafts/draft-heist-tsvwg-ecn-deployment-observations-02.txt">
        <front>
          <title>Explicit Congestion Notification (ECN) Deployment Observations</title>
          <seriesInfo name="Internet-Draft" value="draft-heist-tsvwg-ecn-deployment-observations-02"/>
          <author initials="P" surname="Heist" fullname="Pete Heist"/>
          <author initials="J" surname="Morton" fullname="Jonathan Morton"/>
          <date month="March" day="8" year="2021"/>
        </front>
      </reference>
      <reference anchor="Mandalari" target="https://ieeexplore.ieee.org/document/8316790">
        <front>
          <title>Measuring ECN++: Good News for ++, Bad News for ECN over Mobile</title>
          <seriesInfo name="IEEE Communications Magazine" value="vol. 56, no. 3"/>
          <seriesInfo name="DOI" value="10.1109/MCOM.2018.1700739"/>
          <author initials="AM" surname="Mandalari" fullname="Anna Maria Mandalari"/>            
          <author initials="A" surname="Lutu" fullname="Andra Lutu"/>
          <author initials="B" surname="Briscoe" fullname="Bob Briscoe"/>
          <author initials="M" surname="Bagnulo" fullname="Marcelo Bagnulo"/>
          <author initials="O" surname="Alay" fullname="Ozgu Alay"/>
          <date month="March" year="2018"/> 
        </front>
      </reference>
      <reference anchor="Bauer" target="http://conferences.sigcomm.org/imc/2011/docs/p171.pdf">
        <front>
          <title>Measuring the State of ECN Readiness in Servers, Clients, and Routers</title>
          <seriesInfo name="Proc ACM SIGCOMM Internet Measurement Conference" value="IMC’11"/>
          <author initials="S" surname="Bauer"/>
          <author initials="R" surname="Beverly"/>
          <author initials="A" surname=" Berger"/>
          <date year="2011"/>
          <!-- Mentions "From conversations with network operators, none reported turning on ECN markings." and "We also find instances where the Congestion Experienced (CE) codepoint is set. Across the two trace sets, there were 98 unique hop pairs for which the ECN field switched to CE. For these pairs, the CE codepoint is often set in conjunction with the diffserv codepoint having a non-zero value, thus in all likelihood the network is making use of the legacy ToS field."  -->
        </front>
      </reference>
      <reference anchor="Bhooma" target="https://datatracker.ietf.org/meeting/98/materials/slides-98-maprg-tcp-ecn-experience-with-enabling-ecn-on-the-internet-padma-bhooma-00">
        <front>
          <title>TCP ECN: Experience with enabling ECN on the Internet</title>
          <seriesInfo name="98th IETF MAPRG Presentation" value=""/>
          <author initials="P" surname="Bhooma"/>
          <date year="2017"/>
          <!-- Reports percentage of reports that have seen any CE marking on any of the ECT connections in a 12 hour period: US 0.2%, China 1%, Mexico 3.2%, France 6%, Argentina 30% -->
          <!-- Later it was discovered that a major ISP in Argentina had misconfigured their AN equipment to overwrite the ECN field with CE -->
        </front>
      </reference>
      <reference anchor="Trammel" target="https://link.springer.com/chapter/10.1007%2F978-3-319-15509-8_15">
        <front>
          <title>Enabling Internet-Wide Deployment of Explicit Congestion Notification</title>
          <seriesInfo name="Proc Passive &amp; Active Measurement Conference" value="PAM15"/> 
          <author surname="Trammel" initials="B"/>
          <author surname="Kuehlewind" initials="M"/>
          <author surname="Boppart" initials="D"/>
          <author surname="Learmonth" initials="I"/>
          <author surname="Fairhurst" initials="G"/>
          <author surname="Scheffenegger" initials="R"/> 
          <date year="2015"/>
          <!-- slide deck from MAPRG talk says: "And of ~5 million flows, we saw only two legitimate CE markings." -->
        </front>
      </reference>

      <reference anchor="Holland" target="https://www.ietf.org/proceedings/interim-2020-maprg-01/slides/slides-interim-2020-maprg-01-sessa-latency-aqm-observations-on-the-internet-01.pdf">
        <front>
          <title>Latency &amp; AQM Observations on the Internet</title>
          <seriesInfo name="IETF MAPRG" value="interim-2020-maprg-01"/>
          <author surname="Holland" initials="J" fullname="Jake Holland"/>
          <date year="2020" month="August"/>
        </front>
      </reference>

      <reference anchor="Roddav" target="https://ieeexplore.ieee.org/document/8909187">
        <front>
          <title>On the Usage of DSCP and ECN Codepoints in Internet Backbone Traffic Traces for IPv4 and IPv6</title>
          <seriesInfo name="ISNCC" value="2019"/>
          <seriesInfo name="DOI" value="10.1109/ISNCC.2019.8909187"/>
          <author surname="Roddav" initials="N"/>
          <author surname="Streit" initials="K"/>
          <author surname="Rodosek" initials="G.D."/>
          <author surname="Pras" initials="A"/>
          <date year="2019"/>
        </front>
      </reference>

    </references>
  </back>
</rfc>
<!-- vim: ft=xml tabstop=2 expandtab:
-->
